(define (domain agenteSeguranca)
    (:requirements :strips )
    (:predicates (Em ?s) 
                 (Sala ?s) 
                 (Apagada ?s) (Acesa ?s) 
                 (Janela ?s ?j) (Porta ?s2 ?s1 ?p)
                 (JanelaAberta ?j) (JanelaFechada ?j) 
                 (PortaAberta ?p) (PortaFechada ?p) 
    )
    
    (:action moverEsquerda  :parameters (?s1 ?s2 ?p)
                    :precondition (and (Em ?s1) (Sala ?s1) (Sala ?s2) (Porta ?s2 ?s1 ?p) (PortaAberta ?p) )
                    :effect (and (Em ?s2) (not (Em ?s1)) )
    )
    
    (:action moverDireita   :parameters (?s2 ?s1 ?p)
                    :precondition (and (Em ?s2) (Sala ?s1) (Sala ?s2) (Porta ?s2 ?s1 ?p) (PortaAberta ?p) )
                    :effect (and (Em ?s1) (not (Em ?s2)) )
    )
    
    (:action apagar :parameters (?s)
                    :precondition (and (Em ?s) (Acesa ?s) (Sala ?s))
                    :effect (and (Apagada ?s) (not (Acesa ?s)) )
    )
    
    (:action acender :parameters (?s)
                    :precondition (and (Em ?s) (Apagada ?s) (Sala ?s))
                    :effect (and (Acesa ?s) (not (Apagada ?s)) )
    )
    
    (:action fecharJanela :parameters (?j ?s)
                    :precondition (and (Em ?s) (Janela ?s ?j) (Sala ?s) (JanelaAberta ?j))
                    :effect (and (JanelaFechada ?j) (not (JanelaAberta ?j)) )
    )
    
    (:action abrirJanela :parameters (?j ?s)
                    :precondition (and (Em ?s) (Janela ?s ?j) (Sala ?s) (JanelaFechada ?j))
                    :effect (and (JanelaAberta ?j) (not (JanelaFechada ?j)) )
    )
    
    (:action abrirPorta :parameters (?p ?s1 ?s2)
                    :precondition (and (Em ?s1) (Porta ?s1 ?s2 ?p) (Sala ?s1) (Sala ?s2) (PortaFechada ?p))
                    :effect (and (PortaAberta ?p) (not (PortaFechada ?p)) )
    )
)
